version: '3'
services:
  rust_dockerized_api:
    image: 'rust_dockerized_api:latest'
    build:
      context: .
    environment:
      - DATASOURCE_URL=jdbc:postgresql:postgres:S3cr3t//postgres_db:5432/rust_api_db
    depends_on:
      postgres_db:
        condition: service_healthy
    healthcheck:
      test: curl -f http://localhost:3030
    networks:
      - front-tier
      - back-tier
    deploy:
      replicas: 3
      restart_policy:
        condition: on-failure
          
  postgres_db:
    container_name: postgres_db
    image: 'postgres:13-alpine'
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=S3cr3t
    volumes:
      - "db-data:/var/lib/postgresql/data"
    healthcheck:
      test: exit 0
    networks:
      - back-tier
    deploy:
      placement:
        constraints: [node.role == manager]
  
  nginx:
    image: nginx:latest
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - rust_dockerized_api
    ports:
      - "3000:3000"
    networks:
      - front-tier

volumes:
  db-data:

networks:
  front-tier:
  back-tier: